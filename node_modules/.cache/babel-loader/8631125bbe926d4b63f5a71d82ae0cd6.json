{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai-chatbot\\\\frontend\\\\src\\\\ChatApp.js\",\n  _s = $RefreshSig$();\n// src/ChatApp.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ChatApp.css'; // We'll add beautiful styles separately\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hi! I'm your AI assistant ðŸ¤–. How can I help you today?\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Show user message immediately\n    const newMessages = [...messages, {\n      text: input,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n    try {\n      const response = await axios.post('http://127.0.0.1:5001/chat', {\n        message: input\n      });\n      const botResponse = response.data.response;\n      setMessages([...newMessages, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n      setInput('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...newMessages, {\n        text: \"Something went wrong. Please try again.\",\n        sender: \"bot\"\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"92HXQtoU1boyscgxJBMn1XCENI0=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","text","sender","input","setInput","sendMessage","trim","newMessages","response","post","message","botResponse","data","error","console","handleKeyPress","e","key","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/ai-chatbot/frontend/src/ChatApp.js"],"sourcesContent":["// src/ChatApp.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ChatApp.css'; // We'll add beautiful styles separately\r\n\r\nconst ChatApp = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hi! I'm your AI assistant ðŸ¤–. How can I help you today?\", sender: \"bot\" }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    // Show user message immediately\r\n    const newMessages = [...messages, { text: input, sender: \"user\" }];\r\n    setMessages(newMessages);\r\n    \r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:5001/chat', {\r\n        message: input,\r\n      });\r\n      const botResponse = response.data.response;\r\n\r\n      setMessages([...newMessages, { text: botResponse, sender: \"bot\" }]);\r\n      setInput('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setMessages([...newMessages, { text: \"Something went wrong. Please try again.\", sender: \"bot\" }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input \r\n          type=\"text\" \r\n          value={input} \r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type your message...\" \r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}