{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai-chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [user, setUser] = useState('User'); // Set default name to 'User'\n\n  // 🔁 Load history on page load\n  useEffect(() => {\n    // Load the saved username from localStorage (if any)\n    const savedUser = localStorage.getItem('chatUser');\n    if (savedUser) {\n      setUser(savedUser);\n    } else {\n      // If no user is saved, use default name 'User'\n      setUser('User');\n      localStorage.setItem('chatUser', 'User');\n    }\n\n    // fetch chat history\n    fetch('http://localhost:8000/history').then(res => res.json()).then(data => setChatLog(data)).catch(err => console.error('Failed to fetch chat history:', err));\n  }, []);\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    const newChat = {\n      sender: 'user',\n      text: message\n    };\n    setChatLog([...chatLog, newChat]);\n    setMessage('');\n    try {\n      const res = await fetch('http://localhost:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message,\n          user\n        })\n      });\n      const data = await res.json();\n      const botReply = {\n        sender: 'bot',\n        text: data.reply\n      };\n      setChatLog(prev => [...prev, botReply]);\n    } catch (error) {\n      console.error('Error talking to chatbot:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        minHeight: '300px'\n      },\n      children: chatLog.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0',\n          textAlign: msg.sender === 'user' ? 'right' : 'left',\n          backgroundColor: msg.sender === 'user' ? '#e1f5fe' : '#fff3e0',\n          padding: '10px',\n          borderRadius: '10px',\n          maxWidth: '80%',\n          alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.sender === 'user' ? user : 'Bot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: {\n          width: '80%',\n          padding: '10px'\n        },\n        onKeyPress: e => {\n          if (e.key === 'Enter') sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: '10px 20px',\n          marginLeft: '10px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          await fetch('http://localhost:8000/clear', {\n            method: 'DELETE'\n          });\n          setChatLog([]);\n        },\n        style: {\n          marginLeft: '10px',\n          padding: '10px'\n        },\n        children: \"Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oRcrVPugBNyPCiNoPjWi0/zHAsA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","message","setMessage","chatLog","setChatLog","user","setUser","savedUser","localStorage","getItem","setItem","fetch","then","res","json","data","catch","err","console","error","sendMessage","trim","newChat","sender","text","method","headers","body","JSON","stringify","botReply","reply","prev","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","minHeight","map","msg","i","textAlign","backgroundColor","borderRadius","alignSelf","marginTop","type","value","onChange","e","target","width","onKeyPress","key","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/ai-chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [user, setUser] = useState('User'); // Set default name to 'User'\r\n\r\n  // 🔁 Load history on page load\r\n  useEffect(() => {\r\n    // Load the saved username from localStorage (if any)\r\n    const savedUser = localStorage.getItem('chatUser');\r\n    if (savedUser) {\r\n      setUser(savedUser);\r\n    } else {\r\n      // If no user is saved, use default name 'User'\r\n      setUser('User');\r\n      localStorage.setItem('chatUser', 'User');\r\n    }\r\n  \r\n    // fetch chat history\r\n    fetch('http://localhost:8000/history')\r\n      .then(res => res.json())\r\n      .then(data => setChatLog(data))\r\n      .catch(err => console.error('Failed to fetch chat history:', err));\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n\r\n    const newChat = { sender: 'user', text: message };\r\n    setChatLog([...chatLog, newChat]);\r\n    setMessage('');\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message, user }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botReply = { sender: 'bot', text: data.reply };\r\n      setChatLog((prev) => [...prev, botReply]);\r\n    } catch (error) {\r\n      console.error('Error talking to chatbot:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: 'auto', padding: '20px' }}>\r\n      <h2>Welcome to the AI Chatbot</h2>\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', minHeight: '300px' }}>\r\n        {chatLog.map((msg, i) => (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              margin: '10px 0',\r\n              textAlign: msg.sender === 'user' ? 'right' : 'left',\r\n              backgroundColor: msg.sender === 'user' ? '#e1f5fe' : '#fff3e0',\r\n              padding: '10px',\r\n              borderRadius: '10px',\r\n              maxWidth: '80%',\r\n              alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start',\r\n            }}\r\n          >\r\n            <div><strong>{msg.sender === 'user' ? user : 'Bot'}</strong></div>\r\n            <div>{msg.text}</div>\r\n            {/* Removed the Invalid Date display */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ marginTop: '10px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          style={{ width: '80%', padding: '10px' }}\r\n          onKeyPress={(e) => { if (e.key === 'Enter') sendMessage(); }}\r\n        />\r\n        <button onClick={sendMessage} style={{ padding: '10px 20px', marginLeft: '10px' }}>\r\n          Send\r\n        </button>\r\n        <button\r\n          onClick={async () => {\r\n            await fetch('http://localhost:8000/clear', { method: 'DELETE' });\r\n            setChatLog([]);\r\n          }}\r\n          style={{ marginLeft: '10px', padding: '10px' }}\r\n        >\r\n          Clear Chat\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}