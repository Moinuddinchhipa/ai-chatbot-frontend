{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai-chatbot\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { sendMessage } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleSend = async () => {\n    if (!input) return;\n    const userMsg = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMsg]);\n    const response = await sendMessage(input);\n    const botMsg = {\n      sender: \"bot\",\n      text: response\n    };\n    setMessages(prev => [...prev, botMsg]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid gray\",\n        height: \"300px\",\n        overflowY: \"scroll\"\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 26\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","sendMessage","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSend","userMsg","sender","text","prev","response","botMsg","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","height","overflowY","map","msg","idx","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/ai-chatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { sendMessage } from \"../api\";\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSend = async () => {\r\n    if (!input) return;\r\n\r\n    const userMsg = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMsg]);\r\n\r\n    const response = await sendMessage(input);\r\n    const botMsg = { sender: \"bot\", text: response };\r\n    setMessages((prev) => [...prev, botMsg]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chatbot</h2>\r\n      <div style={{ border: \"1px solid gray\", height: \"300px\", overflowY: \"scroll\" }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx}><strong>{msg.sender}:</strong> {msg.text}</div>\r\n        ))}\r\n      </div>\r\n      <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" />\r\n      <button onClick={handleSend}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACF,KAAK,EAAE;IAEZ,MAAMG,OAAO,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEL;IAAM,CAAC;IAC/CD,WAAW,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,OAAO,CAAC,CAAC;IAEzC,MAAMI,QAAQ,GAAG,MAAMd,WAAW,CAACO,KAAK,CAAC;IACzC,MAAMQ,MAAM,GAAG;MAAEJ,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAEE;IAAS,CAAC;IAChDR,WAAW,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEE,MAAM,CAAC,CAAC;IACxCP,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEN,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBlB,OAAA;MAAKmB,KAAK,EAAE;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAR,QAAA,EAC5EX,QAAQ,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBzB,OAAA;QAAAc,QAAA,gBAAed,OAAA;UAAAc,QAAA,GAASU,GAAG,CAACf,MAAM,EAAC,GAAC;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACM,GAAG,CAACd,IAAI;MAAA,GAA7Ce,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgD,CAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlB,OAAA;MAAO0B,KAAK,EAAErB,KAAM;MAACsB,QAAQ,EAAGC,CAAC,IAAKtB,QAAQ,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAgB;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/FlB,OAAA;MAAQ+B,OAAO,EAAExB,UAAW;MAAAO,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAChB,EAAA,CA5BQD,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AA8BhB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}