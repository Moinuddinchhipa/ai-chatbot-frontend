{"version":3,"sources":["App.js","index.js"],"names":["App","message","setMessage","useState","chatLog","setChatLog","user","setUser","useEffect","savedUser","localStorage","getItem","setItem","fetch","then","res","json","data","catch","err","console","error","sendMessage","async","trim","newChat","sender","text","method","headers","body","JSON","stringify","botReply","reply","prev","_jsxs","className","children","_jsx","map","msg","i","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","ReactDOM","createRoot","document","getElementById","render"],"mappings":"2KA0FeA,MAvFf,WACE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAASC,GAAcF,mBAAS,KAChCG,EAAMC,GAAWJ,mBAAS,QAGjCK,qBAAU,KACR,MAAMC,EAAYC,aAAaC,QAAQ,YACnCF,EACFF,EAAQE,IAERF,EAAQ,QACRG,aAAaE,QAAQ,WAAY,SAInCC,MAAM,iCACHC,MAAKC,GAAOA,EAAIC,SAChBF,MAAKG,GAAQZ,EAAWY,KACxBC,OAAMC,GAAOC,QAAQC,MAAM,gCAAiCF,IAAK,GACnE,IAEH,MAAMG,EAAcC,UAClB,IAAKtB,EAAQuB,OAAQ,OAErB,MAAMC,EAAU,CAAEC,OAAQ,OAAQC,KAAM1B,GACxCI,EAAW,IAAID,EAASqB,IACxBvB,EAAW,IAEX,IACE,MAAMa,QAAYF,MAAM,6BAA8B,CACpDe,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE/B,UAASK,WAI5B2B,EAAW,CAAEP,OAAQ,MAAOC,YADfZ,EAAIC,QACsBkB,OAC7C7B,GAAY8B,GAAS,IAAIA,EAAMF,IACjC,CAAE,MAAOZ,GACPD,QAAQC,MAAM,4BAA6BA,EAC7C,GAGF,OACEe,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,MAAAD,SAAI,8BACJC,cAAA,OAAKF,UAAU,WAAUC,SACtBlC,EAAQoC,KAAI,CAACC,EAAKC,IACjBN,eAAA,OAEEC,UAAW,gBAAgBI,EAAIf,SAASY,SAAA,CAExCC,cAAA,OAAKF,UAAU,cAAaC,SAACC,cAAA,UAAAD,SAAwB,SAAfG,EAAIf,OAAoBpB,EAAO,UACrEiC,cAAA,OAAKF,UAAU,YAAWC,SAAEG,EAAId,SAJ3Be,OASXN,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BC,cAAA,SACEI,KAAK,OACLC,MAAO3C,EACP4C,SAAWC,GAAM5C,EAAW4C,EAAEC,OAAOH,OACrCP,UAAU,aACVW,WAAaF,IAAsB,UAAVA,EAAEG,KAAiB3B,GAAa,EACzD4B,YAAY,yBAEdd,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BC,cAAA,UAAQF,UAAU,cAAcc,QAAS7B,EAAYgB,SAAC,SAGtDC,cAAA,UACEF,UAAU,eACVc,QAAS5B,gBACDV,MAAM,8BAA+B,CAAEe,OAAQ,WACrDvB,EAAW,GAAG,EACdiC,SACH,uBAOX,ECpFac,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOjB,cAACvC,EAAG,I","file":"static/js/main.4fc0fb98.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ChatApp.css'; // Importing the CSS file for styling\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [user, setUser] = useState('User'); // Default name 'User'\r\n\r\n  // 🔁 Load history on page load\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('chatUser');\r\n    if (savedUser) {\r\n      setUser(savedUser);\r\n    } else {\r\n      setUser('User');\r\n      localStorage.setItem('chatUser', 'User');\r\n    }\r\n\r\n    // Fetch chat history\r\n    fetch('http://localhost:8000/history')\r\n      .then(res => res.json())\r\n      .then(data => setChatLog(data))\r\n      .catch(err => console.error('Failed to fetch chat history:', err));\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n\r\n    const newChat = { sender: 'user', text: message };\r\n    setChatLog([...chatLog, newChat]);\r\n    setMessage('');\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message, user }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botReply = { sender: 'bot', text: data.reply };\r\n      setChatLog((prev) => [...prev, botReply]);\r\n    } catch (error) {\r\n      console.error('Error talking to chatbot:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Welcome to the AI Chatbot</h2>\r\n      <div className=\"chat-box\">\r\n        {chatLog.map((msg, i) => (\r\n          <div\r\n            key={i}\r\n            className={`chat-message ${msg.sender}`}\r\n          >\r\n            <div className=\"chat-sender\"><strong>{msg.sender === 'user' ? user : 'Bot'}</strong></div>\r\n            <div className=\"chat-text\">{msg.text}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat-input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          className=\"chat-input\"\r\n          onKeyPress={(e) => { if (e.key === 'Enter') sendMessage(); }}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <div className=\"button-group\">\r\n          <button className=\"send-button\" onClick={sendMessage}>\r\n            Send\r\n          </button>\r\n          <button\r\n            className=\"clear-button\"\r\n            onClick={async () => {\r\n              await fetch('http://localhost:8000/clear', { method: 'DELETE' });\r\n              setChatLog([]);\r\n            }}\r\n          >\r\n            Clear Chat\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}